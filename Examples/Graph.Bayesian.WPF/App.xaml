<Application x:Class="Graph.Bayesian.WPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="http://schemas.panthernet.ru/graphx/"
             xmlns:models1="clr-namespace:Graph.Bayesian.WPF.Models"
             xmlns:view="clr-namespace:Graph.Bayesian.WPF.View"
             xmlns:viewModel="clr-namespace:Graph.Bayesian.WPF.ViewModel"
             xmlns:vertices="clr-namespace:Graph.Bayesian.WPF.Models.Vertices"
             xmlns:controls2="clr-namespace:Graph.Bayesian.WPF.Controls"
             xmlns:infra="clr-namespace:Graph.Bayesian.WPF.Infrastructure"
             xmlns:models="clr-namespace:Graph.Bayesian.WPF.Models"
             xmlns:pt="http://propertytools.org/wpf" 
             xmlns:controls1="clr-namespace:Framework.UI.Controls;assembly=Flip.WPF" 
             xmlns:reactiveui="http://reactiveui.net"
             StartupUri="MainWindow.xaml">


    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Flip.WPF;component/Themes/Generic.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>


            <DataTemplate DataType="{x:Type vertices:ListEditorVertex}">
                <UniformGrid>
                    <Button Command="{Binding Add}"> + </Button>
                    <Button Command="{Binding Subtract}"> - </Button>
                    <Button Command="{Binding Up}">up</Button>
                    <Button Command="{Binding Down}">down</Button>
                </UniformGrid>
            </DataTemplate>      
            
            <DataTemplate DataType="{x:Type vertices:FactoryOrderVertex}">
                <Button Command="{Binding Add}">Add</Button>
            </DataTemplate>
            
            <DataTemplate DataType="{x:Type viewModel:ProductToken}">
                <StackPanel>
                    <TextBlock Text="{Binding ProductId}" FontSize="5" Margin="2"/>
                    <TextBlock Text="{Binding FactoryId}" FontSize="5" Margin="2"/>
                    <TextBlock Text="{Binding IsSelected}" FontSize="5" Margin="2"/>
                </StackPanel>
            </DataTemplate>


            <DataTemplate DataType="{x:Type viewModel:Selection}">
                <StackPanel>
                    <TextBlock Text="{Binding ProductId}"/>
                    <TextBlock Text="{Binding IsSelected}"/>
                </StackPanel>
            </DataTemplate>


            <DataTemplate DataType="{x:Type viewModel:Selections}">
                <Border BorderBrush="Bisque" BorderThickness="1" Height="60">
                    <StackPanel>
                        <Ellipse Fill="Purple" Height="4" Width="4"></Ellipse>
                        <ItemsControl ItemsSource="{Binding Value}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel  ></WrapPanel>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </StackPanel>
                </Border>
            </DataTemplate>


            <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="Background" Value="GhostWhite"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                        <Setter Property="Background" Value="SkyBlue"/>
                    </DataTrigger>          
                </Style.Triggers>
            </Style>
            
            <DataTemplate DataType="{x:Type vertices:ListViewModel}">
                <Border BorderBrush="Bisque" BorderThickness="1" Height="60">
                    <ListBox ItemsSource="{Binding Collection, Mode=OneTime}" SelectedItem="{Binding Selection}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Rows="1" ></UniformGrid>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ListBox>
                </Border>
            </DataTemplate>



            <DataTemplate DataType="{x:Type vertices:SelectionVertex}">
                <StackPanel>
                    <UniformGrid Columns="1">
                        <TextBlock Text="{Binding ID}" />
                        <TextBlock Text="{Binding Type}" />
                        <TextBlock Text="{Binding LastMessage.From}" />
                        <TextBlock Text="{Binding LastSelectionsChange}" />
                        <TextBlock Text="{Binding LastOrderChange}" />
                    </UniformGrid>
                    <ContentControl Content="{Binding ListViewModel}" ></ContentControl>
                </StackPanel>
            </DataTemplate>    
            
            <DataTemplate DataType="{x:Type vertices:CatalogueVertex}">
                <StackPanel>
                    <UniformGrid Columns="1">
                        <TextBlock Text="{Binding ID}" />
                        <TextBlock Text="{Binding Type}" />
                        <TextBlock Text="{Binding LastMessage.From}" />
                        <TextBlock Text="{Binding LastCatalogueChange}" />
                        <TextBlock Text="{Binding LastOrderChange}" />
                    </UniformGrid>
                    <ContentControl Content="{Binding Catalogue}"></ContentControl>
                </StackPanel>
            </DataTemplate>


            <DataTemplate DataType="{x:Type vertices:CacheVertex}">
                <StackPanel>
                    <UniformGrid Columns="1">
                        <TextBlock Text="{Binding ID}" />
                        <TextBlock Text="{Binding Type}" />
                        <TextBlock Text="{Binding LastMessage.From}" />
                    </UniformGrid>
                    <UniformGrid>
                        <TextBlock Text="Products"></TextBlock>
                        <controls1:FlipControl Integer="{Binding Products.Count}"  Height="20"/>

                        <TextBlock Text="Orders"></TextBlock>
                        <controls1:FlipControl Integer="{Binding Orders.Count}"   Height="20"/>
                    </UniformGrid>
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type models1:ViewModelOutputVertex}">
                <StackPanel>
                    <UniformGrid Columns="1">
                        <TextBlock Text="{Binding ID}"/>
                        <TextBlock Text="{Binding Type}" />
                        <TextBlock Text="{Binding LastMessage.From}" />
                    </UniformGrid>
                    <Border BorderBrush="LightGray" BorderThickness="1" Height="60">
                        <ItemsControl ItemsSource="{Binding Responses}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding ProductId }"></TextBlock>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Rows="1" Height="120"></UniformGrid>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Border>
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type models1:TimerVertex}">
                <Button Command="{Binding ClickCommand}">
                    <UniformGrid Columns="1">
                        <TextBlock Text="{Binding ID}"/>
                        <TextBlock Text="{Binding Type}" />
                        <TextBlock Text="{Binding LastMessage.From}" />
                        <!--<TextBlock Text="{Binding TimeSpan, StringFormat=\{0:mm\\:ss\\:ff\}}" />
                        <TextBlock Text="{Binding DateTime}" />-->
                        <pt:SpinControl  Value="{Binding Rate}" SmallChange="100" LargeChange="1000" Minimum="100" Maximum="10000">
                            <TextBlock Text="{Binding Rate, Mode=TwoWay}"  />
                        </pt:SpinControl>
                    </UniformGrid>
                </Button>
            </DataTemplate>

            <DataTemplate DataType="{x:Type models1:Vertex}">
                <Button Command="{Binding ClickCommand}" >
                    <UniformGrid Columns="1">
                        <TextBlock Text="{Binding ID}"/>
                        <TextBlock Text="{Binding Type}" />
                        <TextBlock Text="{Binding LastMessage.From}" />
                    </UniformGrid>
                </Button>
            </DataTemplate>

            <DataTemplate DataType="{x:Type models1:DataVertex}">
                <Button Command="{Binding ClickCommand}" >
                    <UniformGrid Columns="1">
                        <TextBlock Text="{Binding ID}"/>
                        <TextBlock Text="{Binding Type}" />
                        <TextBlock Text="{Binding LastMessage.From}" />
                        <controls1:FlipControl Integer="{Binding Data}"  />
                    </UniformGrid>
                </Button>
            </DataTemplate>

            <DataTemplate DataType="{x:Type models:GroupedItem}">
                <StackPanel>
                    <TextBlock Text="{Binding Key}"></TextBlock>
                    <ItemsControl Height="40" ItemsSource="{Binding Collection}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="1" Width="60"></UniformGrid>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type models:GroupItem}">
                <StackPanel>
                    <TextBlock Text="{Binding GroupKey}" FontSize="7"></TextBlock>
                    <TextBlock Text="{Binding Value}"></TextBlock>
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type models1:HistoryVertex}">
                <Button Command="{Binding ClickCommand}" >
                    <StackPanel>
                        <UniformGrid Columns="1">
                            <TextBlock Text="{Binding ID}"/>
                            <TextBlock Text="{Binding Type}" />
                            <TextBlock Text="{Binding LastMessage.From}" />
                            <TextBlock Text="{Binding History.Collection.Count}"  />
                        </UniformGrid>
                        <Border BorderBrush="Bisque" BorderThickness="1" Height="60">
                            <ItemsControl ItemsSource="{Binding History.Collection}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Rows="1" Height="120"></UniformGrid>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Border>
                    </StackPanel>
                </Button>
            </DataTemplate>

            <DataTemplate DataType="{x:Type models1:DataInputVertex}">
                <Button Command="{Binding ClickCommand}" >
                    <UniformGrid Columns="1">
                        <TextBlock Text="{Binding ID}"/>
                        <TextBlock Text="{Binding Type}" />
                        <TextBlock Text="{Binding LastMessage.From}" />
                        <pt:SpinControl  Value="{Binding Input}" SmallChange="1" LargeChange="10">
                            <TextBlock Text="{Binding Input}"  />
                        </pt:SpinControl>
                    </UniformGrid>
                </Button>
            </DataTemplate>

            <Style TargetType="{x:Type controls:VertexControl}">
                <Setter Property="Foreground" Value="{DynamicResource ButtonText}"/>
                <Setter Property="Width" Value="100"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type controls:VertexControl}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="1" CornerRadius="5" MinWidth="80">
                                    <Viewbox>
                                        <ContentPresenter Content="{TemplateBinding Vertex}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="2"/>
                                    </Viewbox>
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="BorderThickness" Value="1"></Setter>
                                            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}"></Setter>
                                            <Setter Property="BorderBrush" Value="Yellow"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger 
                                                    Binding="{Binding Vertex.LastUpdated, RelativeSource={RelativeSource TemplatedParent}}" 
                                                    Value="True">
                                                    <!--<Setter Property="BorderThickness" Value="3"></Setter>-->
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <!--<ThicknessAnimation AutoReverse="True"
                                                                                    Storyboard.TargetProperty="BorderThickness"
                                                                                    Duration="0:0:1" FillBehavior="HoldEnd" From="1" To="1.1" />-->
                                                                <ColorAnimation To="Orange" 
                                                                                AutoReverse="True"
                                                                                Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)"
                                                                                FillBehavior="Stop" 
                                                                                Duration="0:0:1"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <DataTemplate DataType="{x:Type models1:IdFilter}">
                <Path Data="M0,0.5 L1,1 1,0" Fill="DarkOrange" Stretch="Uniform" Width="5" Height="5" ToolTip="{Binding Id}"/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type models1:AbsoluteFilter}">
                <Ellipse Fill="IndianRed" Height="5" Width="5"></Ellipse>
            </DataTemplate>

            <DataTemplate DataType="{x:Type models1:NoFilter}">
                <Path Data="M0,0.5 L1,1 1,0" Fill="ForestGreen" Stretch="Uniform" Width="5" Height="5"/>
            </DataTemplate>

            <Style TargetType="{x:Type controls:EdgeControl}">

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type controls:EdgeControl}">
                            <Grid>
                                <Path 
                              StrokeThickness="2"
                              x:Name="PART_edgePath">
                                    <Path.Style>
                                        <Style TargetType="Path">
                                            <Setter Property="Stroke" Value="WhiteSmoke" ></Setter>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <controls2:TravellerControl Foreground="Black" ShowPath="False"
                                                            Duration="{Binding Edge.Duration, RelativeSource={RelativeSource TemplatedParent} }"
                                                            RadiusX="5"
                                                            RadiusY="5"
                                                            Point="{Binding Path=Data, ElementName=PART_edgePath}">
                                    <controls2:TravellerControl.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Edge.Active, RelativeSource={RelativeSource TemplatedParent}}"
                                                             Value="{x:Static models1:State.SourceActive}">
                                                    <Setter Property="controls2:TravellerControl.Run" Value="TargetToSource" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Edge.Active, RelativeSource={RelativeSource TemplatedParent}}"
                                                             Value="{x:Static models1:State.TargetActive}">
                                                    <Setter Property="controls2:TravellerControl.Run" Value="SourceToTarget" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding Edge.Active, RelativeSource={RelativeSource TemplatedParent}}"
                                                             Value="{x:Static models1:State.TargetWasActive}">
                                                    <Setter Property="controls2:TravellerControl.Run" Value="None" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Edge.Active, RelativeSource={RelativeSource TemplatedParent}}"
                                                             Value="{x:Static models1:State.SourceWasActive}">
                                                    <Setter Property="controls2:TravellerControl.Run" Value="None" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </controls2:TravellerControl.Style>
                                </controls2:TravellerControl >

                                <controls:DefaultEdgePointer NeedRotation="true" x:Name="PART_EdgePointerForTarget" >
                                    <FrameworkElement.Resources>
                                        <DataTemplate DataType="{x:Type models1:Edge}">
                                            <ContentControl Content="{Binding TargetFilter}">
                                            </ContentControl>
                                        </DataTemplate>
                                    </FrameworkElement.Resources>
                                    <ContentControl Content="{Binding Edge, RelativeSource={RelativeSource TemplatedParent}}">
                                    </ContentControl>
                                </controls:DefaultEdgePointer>

                                <controls:DefaultEdgePointer NeedRotation="true" x:Name="PART_EdgePointerForSource" >
                                    <FrameworkElement.Resources>
                                        <DataTemplate DataType="{x:Type models1:Edge}">
                                            <ContentControl Content="{Binding SourceFilter}">
                                            </ContentControl>
                                        </DataTemplate>
                                    </FrameworkElement.Resources>
                                    <ContentControl Content="{Binding Edge, RelativeSource={RelativeSource TemplatedParent}}">
                                    </ContentControl>
                                </controls:DefaultEdgePointer>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <view:PathConverter x:Key="PathConverter"></view:PathConverter>

            <PathGeometry x:Key="MyGeometry" 
                          Figures="M 0,30 A 30,30 180 0 1 60,30 30,30 180 0 1 0,30"/>

            <!--EDGE LABLE CONTROL -->
            <Style TargetType="{x:Type controls:AttachableEdgeLabelControl}">
                <Setter Property="LabelVerticalOffset" Value="0"/>
                <Setter Property="ShowLabel" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type controls:AttachableEdgeLabelControl}">
                            <Border BorderBrush="Black" BorderThickness="1" Background="White" CornerRadius="5" >
                                <Grid>
                                    <Ellipse x:Name="LabelEllipse" Width="10" Height="10" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="2">
                                        <Ellipse.Style>
                                            <Style TargetType="Ellipse">
                                                <Setter Property="Fill" Value="FloralWhite" ></Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding AttachNode.Edge.Active}"
                                                                 Value="{x:Static models1:State.NotActive}">
                                                        <Setter Property="Fill"
                                                                Value="FloralWhite" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding AttachNode.Edge.Active}"
                                                                 Value="{x:Static models1:State.SourceActive}">
                                                        <Setter Property="Fill"
                                                                Value="Gold" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding AttachNode.Edge.Active}"
                                                                 Value="{x:Static models1:State.TargetActive}">
                                                        <Setter Property="Fill"
                                                                Value="RoyalBlue" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding AttachNode.Edge.Active}"
                                                                 Value="{x:Static models1:State.SourceWasActive}">
                                                        <Setter Property="Fill"
                                                                Value="Yellow" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding AttachNode.Edge.Active}"
                                                                 Value="{x:Static models1:State.TargetWasActive}">
                                                        <Setter Property="Fill"
                                                                Value="CadetBlue" />
                                                    </DataTrigger>

                                                </Style.Triggers>
                                            </Style>
                                        </Ellipse.Style>
                                    </Ellipse>
                                    <TextBlock FontSize="8" Text="{Binding AttachNode.Edge.Text}" Foreground="Black" Margin="1"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="DisplayForSelfLoopedEdges" Value="False"/>
            </Style>
        </ResourceDictionary>

    </Application.Resources>

</Application>
