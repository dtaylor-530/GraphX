using System;
using System.Linq;
using System.Reactive;
using System.Windows.Input;
using AutoBogus;
using Bogus;
using Fasterflect;
using Graph.Bayesian.WPF.Infrastructure;

namespace Graph.Bayesian.WPF.Models
{
    public class HistoryInputVertex : Vertex
    {
        private int input;

        public HistoryInputVertex()
        {
            Random random = new ();
            var properties = typeof(Person).GetProperties().ToArray();
            var clickCommand = ReactiveUI.ReactiveCommand.Create<Unit, PropertyChangeMessage>(unit =>
            {
                var date = DateTime.Now;
                var name = properties[random.Next(0, properties.Length)].Name;
                var value = AutoFaker.Generate<Person>().GetPropertyValue(name);
                var p = new PropertyChangeMessage(this.ID.ToString(), string.Empty, DateTime.Now, new(DateTime.Now, this.ID.ToString(), name, date, value));
                return p;
            });
            clickCommand.Subscribe(a =>
             {
                 OutMessages.OnNext(a);
             });
            ClickCommand = clickCommand;
        }

        public int Input
        {
            get => input;
            set
            {
                input = value;
                this.OnPropertyChanged();
            }
        }

        public class Person
        {
            public int Id { get; set; }
            public string FirstName { get; set; }
            public string LastName { get; set; }
            public string Status { get; set; } // Will be auto generated by the underlying AutoBogus generator
        }


        public override ICommand ClickCommand { get; }
    }
}
